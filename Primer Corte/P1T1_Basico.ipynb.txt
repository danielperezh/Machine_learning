{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "P1T1_Basico",
      "provenance": [],
      "mount_file_id": "17vZ2zZKz7iQyKxC-dnbKwRLbmVaR1be_",
      "authorship_tag": "ABX9TyP6Aeks/WxnzbK09ADF7XQz",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/danielperezh/Machine_learning/blob/main/P1T1_Basico.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Metadata:\n",
        "\n",
        "---\n",
        "\n",
        "*   @Author: Daniel Sebastian Perez Hernandez\n",
        "*   @Date: 2022/02/12\n",
        "*   @Description: this notebook python show basic exercices in python \n",
        "\n"
      ],
      "metadata": {
        "id": "7fSlKToOyjmp"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Ejercicios Basico"
      ],
      "metadata": {
        "id": "jko8Jbhkz_Tj"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Ejercicio 1: productos + IVA"
      ],
      "metadata": {
        "id": "56TnVneZ0R6C"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "prod1 = int (input(\"Input 1° product\"))\n",
        "prod2 = int (input(\"Input 2° product\"))\n",
        "prod3 = int (input(\"Input 3° product\"))\n",
        "prod4 = int (input(\"Input 4° product\"))\n",
        "prod5 = int (input(\"Input 5° product\"))\n",
        "\n",
        "suma = (prod1 + prod2 + prod3 + prod4 + prod5)\n",
        "iva = suma*0.19\n",
        "total = suma + iva\n",
        "print(\"Valor bruto\",suma,\"\\nIVA\",iva,\"\\nTotal\",total)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "W8N-bhVt0h-D",
        "outputId": "f030e3d0-533c-4dda-9560-ea81cf15da26"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Input 1° product1\n",
            "Input 2° product2\n",
            "Input 3° product3\n",
            "Input 4° product4\n",
            "Input 5° product5\n",
            "Valor bruto 15 \n",
            "IVA 2.85 \n",
            "Total 17.85\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "###Version python"
      ],
      "metadata": {
        "id": "Yy00o2t63sEg"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "suma=0\n",
        "for i in range(0, int(input(\"Ingrese la cantidad N de números: \"))):\n",
        "  suma+=int(input(\"ingrese el valor del num \"+str(i)+\": \"))\n",
        "iva = suma * 0.19\n",
        "print(\"Valor Bruto:\",suma,\"\\nIVA\",iva,\"\\nTotal\",(suma+iva))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "FqxGX2BE3xBf",
        "outputId": "81039504-c246-4057-aed6-3198e2f2ce29"
      },
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Ingrese la cantidad N de números: 5\n",
            "ingrese el valor del num 0: 1\n",
            "ingrese el valor del num 1: 2\n",
            "ingrese el valor del num 2: 3\n",
            "ingrese el valor del num 3: 4\n",
            "ingrese el valor del num 4: 5\n",
            "Valor Bruto: 15 \n",
            "IVA 2.85 \n",
            "Total 17.85\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Ejercicio 2: menos, mayor con promedio"
      ],
      "metadata": {
        "id": "D44UZ0gE6OZi"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "n = int(input(\"Ingrese la cantidad de numeros: \"))\n",
        "suma=0\n",
        "menor=99999\n",
        "mayor=0\n",
        "for i in range(1,n+1):\n",
        "    numero = int(input(\"ingrese el valor del num \"+str(i)+\": \"))\n",
        "    suma+=numero\n",
        "    if numero<menor:\n",
        "      menor=numero\n",
        "    else:\n",
        "      mayor=numero\n",
        "prom = suma / n\n",
        "print(\"\\nNumero Mayor es:\",mayor,\"\\nNumero Menor es:\",menor,\"\\nPromedio es:\",prom)\n"
      ],
      "metadata": {
        "id": "V-sxNuWk6Tzo",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "3174aec0-5f03-4153-fa63-3af8ebb9d7f8"
      },
      "execution_count": 38,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Ingrese la cantidad de numeros: 3\n",
            "ingrese el valor del num 1: 35\n",
            "ingrese el valor del num 2: 40\n",
            "ingrese el valor del num 3: 50\n",
            "Numero Mayor es: 50 \n",
            "Numero Menor es: 35 \n",
            "Promedio es: 41.666666666666664\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Ejercico 3: listas"
      ],
      "metadata": {
        "id": "kkWDHKCfWmRo"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import random\n",
        "lista =[random.randrange(10) for i in range(10)]\n",
        "for recorrido  in range(1,len(lista)):\n",
        "  for posicion in range(len(lista)-recorrido):\n",
        "    if lista[posicion]>lista[posicion+1]:\n",
        "      temp = lista[posicion]= lista[posicion+1]\n",
        "      lista[posicion+1]=temp\n",
        "print(lista)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0zVFwvU5Wo_s",
        "outputId": "50a5e1d9-ab6a-42e0-9e3e-4758b392920a"
      },
      "execution_count": 52,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[1, 1, 1, 1, 1, 5, 6, 7, 7, 7]\n"
          ]
        }
      ]
    }
  ]
}